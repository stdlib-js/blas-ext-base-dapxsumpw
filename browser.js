// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(e){"use strict";var r,t="function"==typeof Object.defineProperty?Object.defineProperty:null,o=Object.defineProperty,n=Object.prototype,a=n.toString,i=n.__defineGetter__,u=n.__defineSetter__,l=n.__lookupGetter__,f=n.__lookupSetter__;r=function(){try{return t({},"x",{}),!0}catch(e){return!1}}()?o:function(e,r,t){var o,c,p,_;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(l.call(e,r)||f.call(e,r)?(o=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=o):e[r]=t.value),p="get"in t,_="set"in t,c&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&i&&i.call(e,r,t.get),_&&u&&u.call(e,r,t.set),e};var c=r,p=Math.floor;function _(e,r,t,o,n){var a,i,u,l,f,c,d,s,y,b,v,j,m;if(e<=0)return 0;if(1===e||0===o)return r+t[n];if(a=n,e<8){for(v=0,m=0;m<e;m++)v+=r+t[a],a+=o;return v}if(e<=128){for(i=r+t[a],u=r+t[a+o],l=r+t[a+2*o],f=r+t[a+3*o],c=r+t[a+4*o],d=r+t[a+5*o],s=r+t[a+6*o],y=r+t[a+7*o],a+=8*o,b=e%8,m=8;m<e-b;m+=8)i+=r+t[a],u+=r+t[a+o],l+=r+t[a+2*o],f+=r+t[a+3*o],c+=r+t[a+4*o],d+=r+t[a+5*o],s+=r+t[a+6*o],y+=r+t[a+7*o],a+=8*o;for(v=i+u+(l+f)+(c+d+(s+y));m<e;m++)v+=r+t[a],a+=o;return v}return j=p(e/2),_(j-=j%8,r,t,o,a)+_(e-j,r,t,o,a+j*o)}function d(e,r,t,o){var n,a,i;if(e<=0)return 0;if(1===e||0===o)return r+t[0];if(n=o<0?(1-e)*o:0,e<8){for(a=0,i=0;i<e;i++)a+=r+t[n],n+=o;return a}return _(e,r,t,o,n)}c(d,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:_}),e.default=d,e.ndarray=_,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).dapxsumpw={});
//# sourceMappingURL=browser.js.map
